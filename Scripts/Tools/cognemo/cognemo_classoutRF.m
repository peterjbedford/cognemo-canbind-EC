function class = cognemo_classoutRF(C,data,xset)
%% Preamble
%{
Performs classification on connectivity structure C with covariate
correction from vital parameter values in data.
%}
%%
coptions = xset.coptions;

class.ccoptions         = coptions;
class.ccoptions.N_tree  = floor(coptions.treestofeats*C.pdata.N_v);

    class_start = tic;
[class.ccout.SCORES,...
 class.ccout.IMP,...
 class.ccout.IDX_TE,...
 class.ccout.T_TE] = ...
cognemo_classRF(C.pdata.X,data.T,class.ccoptions);
    class.time = toc(class_start); clear class_start

% True performance
class.ccout.T_pr  = cognemo_score2class(class.ccout.SCORES,0.5);
class.ccout.rates = cognemo_CVrates(class.ccout.T_pr,...
                                    class.ccout.T_TE,...
                                    class.ccout.IDX_TE,...
                                    class.ccoptions);
                                   
% Confusion Matrix
[~,class.ccout.m_conf,~] = cognemo_classrates(class.ccout.T_pr,...
                                              class.ccout.T_TE,...
                                              class.ccout.IDX_TE,...
                                              class.ccoptions);
% ROC and AUC                                   
[class.ccout.ROCx,...
 class.ccout.ROCy,...
 ~,class.ccout.auc] = ...
 perfcurve(class.ccout.T_TE,class.ccout.SCORES,0);

% permutation test
class.ccout.p = cognemo_perm(class.ccout.T_pr,...
                             data.T,...
                             class.ccout.IDX_TE,...
                             class.ccout.rates,...
                             class.ccoptions);

% mcnemar test--need correct/incorrect
[~,class.ccout.IDX_TE_inv] = sort(class.ccout.IDX_TE,'ascend');
class.ccout.Tc = ...
    class.ccout.T_pr(class.ccout.IDX_TE_inv)' == data.T;
class.ccout.Ti = ...
    class.ccout.T_pr(class.ccout.IDX_TE_inv)' ~= data.T;

end